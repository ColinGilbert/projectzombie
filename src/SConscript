"""
This is the SConscript file which will build the files in the sub dir.
"""
#Get the files for projectz lib
files = []
#manually build the files. I now we can automate this. but that invovles more coding than I care for right now.
files.append(File(Glob('command/*.cpp')))
files.append(File(Glob('entities/*.cpp')))
files.append(File(Glob('model/*.cpp')))
files.append(File(Glob('net/*.cpp')))
#disable opensteer. We're not using it. And it doesn't compile on Linux g++ 4.4
#files.append(File(Glob('opensteer/*.cpp')))
files.append(File(Glob('utilities/*.cpp')))

#print Glob('view/[!]*.cpp', strings=True)

files.append(File(Glob('view/[!PingPong|!WhiteNoiseView|!GPU]*.cpp')))
files.append(File(Glob('view/ogreconsole.cpp'))) #HACK. I can't get exclusion to work.
files.append(File(Glob('view/Workspace.cpp')))
files.append(File(Glob('view/GraphicsController.cpp')))
files.append(File(Glob('ZCL/*.cpp')))
files.append(File(Glob('world/*.cpp')))
files.append(File(Glob('graphics/*.cpp')))
files.append(File(Glob('geometry/*.cpp')))
files.append(File(Glob('gui/*.cpp')))
files.append(File(Glob('toolset/*.cpp')))


Import('env')


projectZ = env.Library('projectz', files)
#Let's build OpenCL testCLDriver
raknet_path = env["RAKNET_PATH"]
print "Raknet_path: ", raknet_path
raknetStatic = File(raknet_path+"build/libRakNet.a")
#env.Append(LIBPATH = ".")
env.Append(LIBS = [projectZ, raknetStatic])

testCLDriver = env.Program('TestCLDriver.cpp')
zombieDriver = env.Program('ZombieDriver.cpp')
#Install the files
env.Install("../ZombieMedia/release/", testCLDriver)
env.Install("../ZombieMedia/release/", zombieDriver)


